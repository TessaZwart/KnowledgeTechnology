<!DOCTYPE html>
<html>
	<head>
		<title><?=$this->html($domain->title) ?></title>
		<link rel="stylesheet" href="webfrontend.css">
	</head>
	<body id="webfrontend">
		<nav class="site-nav">
			<a href="index.php">Documentation</a>
			<a href="<?=$this->attr($_SERVER['REQUEST_URI'])?>">Start over</a>
			<a href="analyse.php?kb=<?=rawurlencode($_GET['kb'])?>">Analyse</a>
			<a href="#debug">Debug</a>
		</nav>
		<header>
			<h1><?=$this->html($domain->title)?></h1>
			<p><?=$domain->description?></p>
		</header>
		<div>
			<form method="post">
				<input type="hidden" name="state" value="<?=_encode($state) ?>">
				<input type="hidden" name="log" value="<?=_encode($log) ?>">
				<?=$content?>
			</form>
		</div>
		<aside id="debug-info">
			<div class="content">
				<?php $formatter = new HTMLFormatter($state); ?>
				<section class="state-info fact-state">
					<h3>Facts</h3>
					<dl>
						<?php foreach($state->facts as $name => $item): ?>
						<dt><?=$name?></dt>
						<dd>
							<tt><?=$this->html($item->value)?></tt>
							<?php if (KnowledgeState::is_variable($item->value)): ?>
								<small><tt><?=$this->html($state->resolve($item->value)) ?></tt></small>
							<?php endif ?>
							<?php if ($item->reason): ?>
								<span class="reason">because <?=$formatter->formatReason($item->reason) ?></span>
							<?php endif ?>
						</dd>
						<?php endforeach ?>
					</dl>
				</section>
				
				<section class="state-info goal-stack">
					<h3>Goal stack</h3>
					<?php if ($state->goalStack->isEmpty()): ?>
						<em>Goal stack is empty</em>
					<?php else: ?>
						<ol>
							<?php foreach ($state->goalStack as $goal): ?>
							<li><?=$goal?></li>
							<?php endforeach ?>
						</ol>
					<?php endif ?>
				</section>
				
				<section class="state-info rule-state">
					<h3>Rules</h3>
					<select id="rule-state-selector">
						<option value="" selected>All</option>
						<option value="maybe">Undecided only</option>
						<option value="true">True</option>
						<option value="false">False</option>
					</select>
					<ul>
						<?php foreach($domain->rules as $rule): ?>
						<li><?=$formatter->formatRule($rule)?></li>
						<?php endforeach ?>
					</ul>
				</section>

				<section class="state-info log">
					<h3>Step by step</h3>
					<select id="log-level-selector">
						<option value="<?=LOG_LEVEL_WARNING?>">Warnings only</option>
						<option value="<?=LOG_LEVEL_INFO?>">Useful</option>
						<option value="<?=LOG_LEVEL_VERBOSE?>">Everything</option>
					</select>
					<ol>
					<?php foreach($log->messages as $step_i => $step): ?>
						<li>Step <?=$step_i?></li>
						<ol>
						<?php foreach ($step as list($level, $message)): ?>
							<li class="log-level-<?=$level?>">
								<?=$message?>
							</li>
						<?php endforeach ?>
						</ol>
					<?php endforeach ?>
					</ol>
				</section>
			</div>
		</aside>

		<script src="//code.jquery.com/jquery-1.11.0.min.js"></script>
		<script>
		/* when clicking on an item, select the accompanying radio-button
		and submit the form. Unless the user clicks on a link. */
		$('.question > .options > li')
			.addClass('single-click')
			.click(function(e) {
				if (e.target.nodeName == 'A')
					return;

				var radio = $(this).find('input[type=radio]');
				radio.prop('checked', true);
				e.preventDefault();
				radio.get(0).form.submit();
			});
		
		$('.question button[type=submit]').hide();

		var panel = $('#debug-info');

		var grippy = $('<div>').addClass('grippy').appendTo(panel);

		var delta = 15;

		function updateDebugPanelVisibility() {
			$(document.body).toggleClass('show-debug-info', !!parseInt(localStorage.debug));

			if (localStorage.debugPanelWidth)
				panel.css('width', localStorage.debugPanelWidth);
		}

		updateDebugPanelVisibility();

		$('a[href=#debug]').click(function(e) {
			e.preventDefault();
			localStorage.debug = parseInt(localStorage.debug) ? 0 : 1;
			updateDebugPanelVisibility();
		});

		function resizeDebugPanel(e) {
			localStorage.debugPanelWidth = Math.max(document.body.clientWidth - e.clientX + delta, 300);
			panel.css('width', localStorage.debugPanelWidth);
		}

		function removeResizeListener() {
			$(window)
				.off('mousemove', resizeDebugPanel)
				.off('mouseup', removeResizeListener);
		}

		grippy.mousedown(function(e) {
			e.preventDefault();
			jQuery(window)
				.on('mousemove', resizeDebugPanel)
				.on('mouseup', removeResizeListener);
		});

		function updateLogLevel() {
			var logLevel = $('#log-level-selector').val();
			localStorage.logLevel = logLevel;

			$('.state-info.log li').each(function() {
				var messageLogLevel = this.className.match(/log-level-(\d)/);
				$(this).toggle(!messageLogLevel || messageLogLevel[1] >= logLevel);
			});
		}

		function updateRuleState() {
			var ruleState = $('#rule-state-selector').val();
			localStorage.ruleState = ruleState;

			$('.state-info.rule-state li > .kb-rule').each(function() {
				var state = this.className.match(/evaluation-(true|false|maybe)/);
				console.log(state);
				$(this).closest('li').toggle(!state || !ruleState || state[1] == ruleState);
			});
		}

		$('#log-level-selector')
			.change(updateLogLevel)
			.val(localStorage.logLevel || <?=LOG_LEVEL_INFO?>);

		$('#rule-state-selector')
			.change(updateRuleState)
			.val(localStorage.ruleState || '');

		updateLogLevel();

		updateRuleState();
		</script>
	</body>
</html>
